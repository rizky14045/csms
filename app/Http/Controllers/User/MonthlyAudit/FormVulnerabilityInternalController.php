<?php

namespace App\Http\Controllers\User\MonthlyAudit;

use Illuminate\Http\Request;
use App\Http\Helper\BlockMonthly;
use Illuminate\Support\Facades\DB;
use App\Http\Controllers\Controller;
use App\Models\InternalVulnerability;
use RealRashid\SweetAlert\Facades\Alert;

class FormVulnerabilityInternalController extends Controller
{
    public function index($monthlyId){

        $data['monthlyId'] = $monthlyId;
        $data['internals'] = InternalVulnerability::with('vulnerability')->where('monthly_report_id', $monthlyId)->get();
        return view('user.monthly-audit.form-vulnerability-internal',$data);
    }

    public function save(Request $request,$monthlyId){
        try {
            
            DB::beginTransaction();

            $outsources = [];

            foreach ($request->incident as $index => $unit) {
                InternalVulnerability::where('id',$request->incident[$index])->update([
                    'total_incident' => $request->total_incident[$index],
                    'reported' => $request->reported[$index],
                    'not_reported' => $request->not_reported[$index],
                    'finished' => $request->finished[$index],
                    'on_progress' => $request->on_progress[$index],
                ]);
            }
    
            DB::commit();
            Alert::success('Save berhasil', 'Data berhasil disimpan!');
            return redirect()->back();
        } catch (\Throwable $th) {

            DB::rollback();
            Alert::success('Save gagal', 'Data gagal disimpan!');
            return redirect()->back();

        }
    }
}
